{"name":"yrmcds","tagline":"memcached compatible KVS with master/slave replication","body":"yrmcds is a memory object caching system with master/slave replication.\r\n\r\nCurrently, yrmcds supports two protocols: the first is an enhanced\r\n[memcached][], and another is a protocol to implement\r\n[distributed resource counters](https://github.com/cybozu/yrmcds/tree/master/docs/counter.md).\r\n\r\nSince the memcached protocol is perfectly compatible with the\r\n[original implementation][memcached], yrmcds can be used as a drop-in\r\nreplacement for memcached.  Thanks to its virtual-IP based replication\r\nsystem, existing applications can obtain high-available\r\nmemcached-compatible service without any modifications.\r\n\r\nA companion client library [libyrmcds][] and a [PHP extension][php-yrmcds]\r\nare also available.\r\n\r\nyrmcds was developed originally for [kintone.com][kintone].\r\n\r\nFeatures\r\n--------\r\n\r\n* Complete memcached text and binary protocols with these extensions:\r\n    * [Server-side locking](https://github.com/cybozu/yrmcds/tree/master/docs/locking.md)\r\n    * [Dump keys](https://github.com/cybozu/yrmcds/tree/master/docs/keys.md)\r\n* [Distributed resource counter](https://github.com/cybozu/yrmcds/tree/master/docs/counter.md) protocol.\r\n* [Optional memory security](docs/usage.md#secure_erase) to store\r\n  confidential information like SSL session data.\r\n* Large objects can be stored in temporary files, not in memory.\r\n* Virtual-IP based master-slave replication.\r\n    * Automatic fail-over\r\n    * Automatic recovery of redundancy.\r\n* Global LRU eviction / no slab distribution problem.\r\n    * Unlike memcached, yrmcds is not involved with slabs problems.\r\n      ([1][slab1], [2][slab2])\r\n\r\nA [companion client library][libyrmcds] and a [PHP extension][php-yrmcds]\r\nare also available.\r\n\r\nSee also [usage guide](https://github.com/cybozu/yrmcds/tree/master/docs/usage.md),\r\n[future plans](https://github.com/cybozu/yrmcds/tree/master/docs/future.md),\r\n[differences from memcached](https://github.com/cybozu/yrmcds/tree/master/docs/diffs.md),\r\n[design notes](https://github.com/cybozu/yrmcds/tree/master/docs/design.md)\r\nand some [benchmark results](https://github.com/cybozu/yrmcds/tree/master/docs/bench.md).\r\n\r\nAbout the name\r\n--------------\r\n\r\nThe name yrmcds was taken from \"Ymmt's Replicating MemCacheD for Sessions\".  \r\nAs it reads, yrmcds was developed mainly for session storage.\r\n\r\nThe correct pronunciation sounds like: \"Yo-Ru-Mac-Do\" (夜マクド in Japanese).\r\n\r\nLicense\r\n-------\r\n\r\nyrmcds is licensed under [the BSD 2-clause license][bsd2].\r\n\r\nThe source code contains a [SipHash][] implementation borrowed from\r\n[csiphash][] which is licensed under [the MIT license][mit].\r\n\r\n[memcached]: http://memcached.org/\r\n[bsd2]: http://opensource.org/licenses/BSD-2-Clause\r\n[SipHash]: https://131002.net/siphash/\r\n[csiphash]: https://github.com/majek/csiphash\r\n[mit]: http://opensource.org/licenses/MIT\r\n[libyrmcds]: http://cybozu.github.io/libyrmcds/\r\n[php-yrmcds]: http://cybozu.github.io/php-yrmcds/\r\n[slab1]: http://nosql.mypopescu.com/post/13506116892/memcached-internals-memory-allocation-eviction\r\n[slab2]: https://groups.google.com/forum/#!topic/memcached/DuJNy5gbQ0o\r\n[kintone]: https://www.kintone.com/\r\n[tcmalloc]: http://goog-perftools.sourceforge.net/doc/tcmalloc.html","google":"UA-42201828-2","note":"Don't delete this file! It's used internally to help with page regeneration."}